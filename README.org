PeakSegJoint: supervised joint peak detection ([[http://arxiv.org/abs/1506.01286][arXiv:1506.01286]])

[[https://travis-ci.org/tdhock/PeakSegJoint][https://travis-ci.org/tdhock/PeakSegJoint.png?branch=master]]

There are two major differences between PeakSegJoint and all of the
other peak detection algorithms for ChIP-seq data analysis:

- *Supervised machine learning:* PeakSegJoint is trained by providing
  labels that indicate regions with and without peaks. So if
  you see false positives (a peak called where there is clearly only
  background noise) or false negatives (no peak called where there
  should be one) you can add labels to correct PeakSegJoint, and it
  learns and gets more accurate as more labels are added. In contrast,
  other peak detection methods are *unsupervised*, meaning that they
  usually have 10-20 parameters, and no obvious way to train them,
  yielding arbitrarily inaccurate peaks that can NOT be corrected
  using labels.
- *Joint peak detection in any number of samples or cell types* so the
  model can be easily interpreted to find similarities or differences
  between samples (PeakSegJoint outputs a binary matrix, samples x
  peaks). In contrast, it is not easy to find similarities and
  differences between samples using single-sample peak detection
  methods (e.g. [[https://github.com/taoliu/MACS][MACS]]), and other multi-sample peak detection methods
  are limited to one (e.g. [[https://github.com/mahmoudibrahim/jamm][JAMM]]) or two (e.g. [[https://github.com/shawnzhangyx/PePr][PePr]]) cell types
  (assuming all samples of the same cell type are replicates with the
  same peak pattern).

** To use PeakSegJoint in practice on large genomic data sets

The [[https://github.com/tdhock/PeakSegFPOP][PeakSegFPOP]] and [[https://github.com/tdhock/PeakSegPipeline][PeakSegPipeline]] repositories contain a pipeline
which includes PeakSegJoint and our more recent PeakSegFPOP
algorithm. We recommend to use these other packages (which use
PeakSegJoint as a sub-routine) for predicting peaks in the whole
genome of several samples.

** R installation instructions and usage examples

This R package contains [[file:src/PeakSegJoint.c][C code that implements the fast
heuristic JointZoom algorithm]] described in the [[http://arxiv.org/abs/1506.01286][PeakSegJoint paper]]
[[[https://github.com/tdhock/PeakSegJoint-paper][source]]]. 

#+BEGIN_SRC R
  if(!require(devtools))install.packages("devtools")
  devtools::install_github("tdhock/PeakSegJoint")
  library(PeakSegJoint)
  example(PeakSegJointSeveral) # JointZoom approximate segmentation algo.
  example(PeakSegJointError) # Number of incorrect labels.
#+END_SRC

