PeakSegJoint is an R package with [[file:src/PeakSegJoint.c][C code that implements the fast
heuristic JointZoom algorithm]] described in the [[https://github.com/tdhock/PeakSegJoint-paper][PeakSegJoint paper]]. It
also contains [[file:R/fista.R][an R implementation of a Fast Iterative
Shinkage-Thresholding Algorithm (FISTA) for L1-regularized interval
regression with the squared hinge loss]]. 

[[https://travis-ci.org/tdhock/PeakSegJoint][https://travis-ci.org/tdhock/PeakSegJoint.png?branch=master]]

** Example output

[[http://cbio.ensmp.fr/~thocking/data/PeakSegJoint-H3K4me3-test/figure-train-errors/][Train error data viz, four samples of H3K4me3 data]].

** R installation instructions

#+BEGIN_SRC R
  install.packages("devtools")
  devtools::install_github("tdhock/PeakSegJoint")
  library(PeakSegJoint)
  example(PeakSegJointSeveral) #segmentation algo.
  example(PeakSegJointError) #TODO
  example(IntervalRegressionProblems) #fista interval regression algo.
#+END_SRC

** Run PeakSegJoint on a cluster with qsub

First, plot the coverage of several samples of the same experiment
type in a genome browser ([[https://www.broadinstitute.org/igv/][IGV]] or [[http://genome.ucsc.edu/cgi-bin/hgGateway][UCSC]]). To compute the coverage you
can use [[http://bedtools.readthedocs.org/en/latest/content/tools/genomecov.html][bedtools genomecov -bg]] to get a bedGraph file and then use
[[http://genome.ucsc.edu/goldenPath/help/bigWig.html][bedGraphToBigWig]] to convert it to a bigwig file that can be viewed on
a genome browser. The coverage data can be either normalized
(non-integer values) or raw (integer valued count data), with or
without lines for zero coverage.

Then, visually identify several regions with and without peaks, saving
those labels to a file. [[file:inst/exampleData/manually_annotated_region_labels.txt][Example labels file]]: there are two cell types,
bcell and tcell. Note that for the labels file, you may use only
[[http://cbio.ensmp.fr/~thocking/chip-seq-chunk-db/][peakStart, peakEnd, noPeaks, and peaks]] labels.

Then, put that label file in the same directory as several
sub-directories that have names that match the labels file. [[file:inst/exampleData/][Example
data set]]: the tcell subdirectory contains two bigwig files, and the
bcell subdirectory contains two bigwig files.

Then, download and run the pipeline R script, which will run the
analysis in parallel if you have a cluster with qsub:

#+BEGIN_SRC shell
wget https://raw.githubusercontent.com/tdhock/PeakSegJoint/master/exec/00_AllSteps_qsub.R
## Edit script.txt variable to reflect your cluster configuration!
Rscript 00_AllSteps_qsub.R path/to/labels.txt
#+END_SRC

If you don't have access to a cluster with qsub, you can still run the
[[file:exec/][steps]] in sequence on one computer, by changing the definition of
=qsub= in that file:

#+BEGIN_SRC R
qsub <- "bash"
#+END_SRC

